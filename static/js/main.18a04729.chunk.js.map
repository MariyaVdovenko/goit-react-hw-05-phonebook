{"version":3,"sources":["App.module.css","Components/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.jsx","Redux/actions/contactFormActions.js","Redux/types/contactFormTypes.js","Redux/contactFormSelectors.js","Components/ContactListItem/ContactListItem.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.jsx","Redux/redusers/contactFormReducer.js","Redux/store.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSave","NotificationManager","error","className","styles","Form","onSubmit","this","Label","Label__text","Input","type","placeholder","onChange","pattern","Button","Component","connect","dispatch","payload","contact","id","shortId","generate","contactFormActions","getContacts","contacts","getFilter","filter","getFiltredContacts","createSelector","toLowerCase","includes","getContactById","find","ownProps","contactFormSelectors","onDeleteContact","ContactListItem","onClick","dispath","onChangeFilter","ContactList","map","key","App","AppText","deleteContact","contactFormReducer","undefined","warning","preloadedState","localStorage","getItem","JSON","parse","allContacts","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18a04729.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2yPX-\",\"AppText\":\"App_AppText__1Jx_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactListItem_ContactListItem__PmGUa\",\"Button\":\"ContactListItem_Button__puJZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__3jYis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"ContactForm_Label__3fQOU\",\"Label__text\":\"ContactForm_Label__text__1Gglc\",\"Input\":\"ContactForm_Input__3eLno\",\"Button\":\"ContactForm_Button__2_F4s\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport * as contactFormActions from '../../Redux/actions/contactFormActions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!this.state.name) {\r\n      NotificationManager.error('Введите имя', 'Ошибка', 5000);\r\n\r\n      return;\r\n    }\r\n\r\n    this.props.onSave(this.state.name, this.state.number);\r\n    this.setState({ number: '', name: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.Label}>\r\n          <span className={styles.Label__text}>Name</span>\r\n          <input\r\n            className={styles.Input}\r\n            type=\"text\"\r\n            placeholder=\"Enter name(min 3 symb)\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            pattern=\"[A-Za-z]{3,}\"\r\n          />\r\n          <input\r\n            className={styles.Input}\r\n            type=\"number\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.Button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSave: (name, number) => dispatch(contactFormActions.add(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import * as types from '../types/contactFormTypes';\r\nimport shortId from 'shortid';\r\n\r\nexport const add = (name, number) => {\r\n  return {\r\n    type: types.ADD_CONTACT,\r\n    payload: {\r\n      contact: {\r\n        id: shortId.generate(),\r\n        name: name,\r\n        number: number,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const remove = id => {\r\n  return {\r\n    type: types.REMOVE_CONTACT,\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport const changeFilter = filter => {\r\n  return {\r\n    type: types.CHANGE_FILTER,\r\n    payload: {\r\n      filter,\r\n    },\r\n  };\r\n};\r\n","export const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const REMOVE_CONTACT = 'REMOVE_CONTACT';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getContacts = state => state.contacts;\r\nconst getFilter = state => state.filter;\r\n\r\nconst getFiltredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactById = (state, id) => {\r\n  const contacts = getContacts(state);\r\n  return contacts.find(contact => contact.id === id);\r\n};\r\nexport default { getContacts, getFilter, getFiltredContacts, getContactById };\r\n","import React from 'react';\r\nimport styles from './ContactListItem.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as contactFormActions from '../../Redux/actions/contactFormActions';\r\nimport contactFormSelectors from '../../Redux/contactFormSelectors';\r\n\r\nconst ContactListItem = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.ContactListItem}>\r\n      <p className={styles.name}>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.Button} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactFormSelectors.getContactById(state, ownProps.id);\r\n  return { ...contact };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onDeleteContact: id => dispatch(contactFormActions.remove(ownProps.id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactFormSelectors from '../../Redux/contactFormSelectors';\r\nimport * as contactFormActions from '../../Redux/actions/contactFormActions';\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => (\r\n  <section>\r\n    <input\r\n      className={styles.Input}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n  </section>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: contactFormSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispath => {\r\n  return {\r\n    onChangeFilter: filter => dispath(contactFormActions.changeFilter(filter)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport Filter from '../Filter/Filter';\r\nimport { connect } from 'react-redux';\r\n\r\nimport contactFormSelectors from '../../Redux/contactFormSelectors';\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Filter />\r\n        <ul>\r\n          {this.props.contacts.map(({ id, name, number }) => (\r\n            <ContactListItem key={id} id={id} />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  contacts: contactFormSelectors.getFiltredContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\nimport styles from './App.module.css';\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\nimport { connect } from 'react-redux';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer } from 'react-notifications';\r\n\r\n//import T from 'prop-types';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.App}>\r\n        <h1 className={styles.AppText}>Phonebook</h1>\r\n        <ContactForm onSubmit={this.onSubmit} />\r\n        <h2 className={styles.AppText}>Contacts</h2>\r\n\r\n        <ContactList\r\n          contacts={this.props.contacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n        <NotificationContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import * as types from '../types/contactFormTypes';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nconst contactFormReducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_CONTACT:\r\n      const filr = state.contacts.find(contact => {\r\n        return (\r\n          contact.name.toLowerCase() === payload.contact.name.toLowerCase()\r\n        );\r\n      });\r\n\r\n      if (filr !== undefined) {\r\n        NotificationManager.warning(\r\n          `${payload.contact.name} already exist`,\r\n          'Try another name',\r\n          3000,\r\n        );\r\n        return state;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, payload.contact],\r\n      };\r\n    case types.REMOVE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== payload.id),\r\n      };\r\n    case types.CHANGE_FILTER:\r\n      return { ...state, filter: payload.filter };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactFormReducer;\r\n","import { createStore } from 'redux';\r\nimport contactFormReducer from './redusers/contactFormReducer';\r\nimport allContacts from '../contacts.json';\r\n\r\nconst preloadedState = {\r\n  contacts: localStorage.getItem('contacts')\r\n    ? JSON.parse(localStorage.getItem('contacts'))\r\n    : allContacts,\r\n  filter: '',\r\n};\r\n\r\nconst store = createStore(\r\n  contactFormReducer,\r\n  preloadedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem('contacts', JSON.stringify(store.getState().contacts));\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}